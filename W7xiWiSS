local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))()

local Window = redzlib:MakeWindow({
  Title = "Star Hub v.0.0.1",
  SubTitle = "By: ghost",
  SaveFolder = "testando | redz lib v5.lua"
})

Window:AddMinimizeButton({
    Button = { Image = "rbxassetid://104211282975349", BackgroundTransparency = 0 },
    Corner = { CornerRadius = UDim.new(0, 20) }
})

local Tab1 = Window:MakeTab({"Home", "rbxassetid://138700382840270"})

local Section = Tab1:AddSection("Hub Credits")

local Paragraph = Tab1:AddParagraph({"Founder", "ghost & arthur"})

local Paragraph = Tab1:AddParagraph({"Developers", "Soy el torrada"})

local function detectExecutor()
    if identifyexecutor then
        return identifyexecutor()
    elseif syn then
        return "Synapse X"
    elseif KRNL_LOADED then
        return "KRNL"
    elseif is_sirhurt_closure then
        return "SirHurt"
    elseif pebc_execute then
        return "ProtoSmasher"
    elseif getexecutorname then
        return getexecutorname()
    else
        return "Executor Desconhecido"
    end
end

local executorName = detectExecutor()

local Paragraph = Tab1:AddParagraph({"Execultor", executorName})

local Section = Tab1:AddSection({"<Rejoin-"})

Tab1:AddButton({
  Name = "Rejoin",
  Callback = function()
    repeat task.wait() until game.CoreGui:FindFirstChild('RobloxPromptGui')
 
local lp,po,ts = game:GetService('Players').LocalPlayer,game.CoreGui.RobloxPromptGui.promptOverlay,game:GetService('TeleportService')
 
po.ChildAdded:connect(function(a)
    if a.Name == 'ErrorPrompt' then
        while true do
            ts:Teleport(game.PlaceId)
            task.wait(2)
        end
    end
end)
  end
})

local Tab2 = Window:MakeTab({"Troll", "rbxassetid://10734934585"})

local Section = Tab2:AddSection({"Menu Troll"})

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local CurrentCamera = workspace.CurrentCamera
local RunService = game:GetService("RunService")

local viewEnabled = false
local currentTarget = nil
local characterAddedConn = nil
local playerNames = {}

local function updateDropdown()
    playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(playerNames, player.Name)
        end
    end
    if Dropdown then
        Dropdown:Set(playerNames)
    end
end

local function onPlayerAdded(player)
    if player ~= LocalPlayer then
        table.insert(playerNames, player.Name)
        if Dropdown then
            Dropdown:Set(playerNames)
        end
    end
end

local function onPlayerRemoving(player)
    for i, name in ipairs(playerNames) do
        if name == player.Name then
            table.remove(playerNames, i)
            break
        end
    end
    if Dropdown then
        Dropdown:Set(playerNames)
    end

    if currentTarget == player then
        stopViewing()
    end
end

Players.PlayerAdded:Connect(onPlayerAdded)
Players.PlayerRemoving:Connect(onPlayerRemoving)
task.delay(1, updateDropdown)

local function resetCamera()
    if LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait() then
        CurrentCamera.CameraSubject = LocalPlayer.Character
    end
end

local function tweenToTargetPart(part)
    local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local targetCFrame = part.CFrame + part.CFrame.LookVector * -10 + Vector3.new(0, 5, 0)
    local goal = {CFrame = CFrame.new(targetCFrame.Position, part.Position)}
    local tween = TweenService:Create(CurrentCamera, tweenInfo, goal)
    tween:Play()
end

function setViewTarget(targetName)
    local targetPlayer = Players:FindFirstChild(targetName)
    if not targetPlayer then
        warn("[VIEW] Jogador não encontrado: " .. targetName)
        return
    end

    currentTarget = targetPlayer

    if characterAddedConn then
        characterAddedConn:Disconnect()
    end

    characterAddedConn = targetPlayer.CharacterAdded:Connect(function(char)
        task.wait(0.1)
        if viewEnabled and currentTarget == targetPlayer then
            local hrp = char:FindFirstChild("HumanoidRootPart")
            if hrp then
                tweenToTargetPart(hrp)
            end
            pcall(function()
                CurrentCamera.CameraSubject = char
            end)
        end
    end)

    if targetPlayer.Character then
        local hrp = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
        if hrp then
            tweenToTargetPart(hrp)
        end
        pcall(function()
            CurrentCamera.CameraSubject = targetPlayer.Character
        end)
    end
end

function stopViewing()
    viewEnabled = false
    currentTarget = nil
    if characterAddedConn then
        characterAddedConn:Disconnect()
        characterAddedConn = nil
    end
    resetCamera()
end

RunService.RenderStepped:Connect(function()
    if viewEnabled and currentTarget then
        if not currentTarget:IsDescendantOf(game) then
            stopViewing()
            return
        end
        if currentTarget.Character and CurrentCamera.CameraSubject ~= currentTarget.Character then
            pcall(function()
                CurrentCamera.CameraSubject = currentTarget.Character
            end)
        end
    end
end)

Dropdown = Tab2:AddDropdown({
    Name = "Selecione o Jogador.",
    Options = playerNames,
    Default = {},
    MultiSelect = false,
    Callback = function(Value)
        if typeof(Value) == "string" and Players:FindFirstChild(Value) then
            getgenv().Target = Value
            if viewEnabled then
                setViewTarget(Value)
            end
        end
    end
})

Tab2:AddToggle({
    Name = "View",
    Default = false,
    Callback = function(state)
        viewEnabled = state
        if state and getgenv().Target then
            setViewTarget(getgenv().Target)
        else
            stopViewing()
        end
    end
})

Players.PlayerAdded:Connect(onPlayerAdded)
Players.PlayerRemoving:Connect(onPlayerRemoving)
task.delay(1, updateDropdown)

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

Tab2:AddButton({
	Name = "Goto",
	Callback = function()
		local success, err = pcall(function()
			local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
			local hrp = character:FindFirstChild("HumanoidRootPart")

			if not hrp then return end

			local targetName = getgenv().Target
			if not targetName then
				warn("[GOTO] Nenhum alvo definido.")
				return
			end

			local targetPlayer = Players:FindFirstChild(targetName)
			if not targetPlayer or not targetPlayer.Character then
				warn("[GOTO] Alvo inválido ou não encontrado.")
				return
			end

			local targetHRP = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
			if not targetHRP then
				warn("[GOTO] Alvo sem HumanoidRootPart.")
				return
			end

			local goal = {CFrame = targetHRP.CFrame + Vector3.new(0, 5, 0)}
			local tween = TweenService:Create(hrp, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), goal)
			tween:Play()
		end)

		if not success then
			warn("[GOTO] Erro ao tentar teleportar:", err)
		end
	end
})

local Section = Tab2:AddSection({"Kill"})

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Backpack = Player:FindFirstChild("Backpack")
local AllBool = false

getgenv().Target = nil
getgenv().OldPos = nil

local function GetPlayer(Name)
    Name = Name:lower()
    for _, x in next, Players:GetPlayers() do
        if x ~= Player then
            if x.Name:lower():match("^" .. Name) or x.DisplayName:lower():match("^" .. Name) then
                return x
            end
        end
    end
    return nil
end

local function EquipCouch()
    if Backpack then
        local Couch = Backpack:FindFirstChild("Couch")
        if Couch and not Player.Character:FindFirstChild("Couch") then
            Player.Character.Humanoid:EquipTool(Couch)
        end
    end
end

local function UnequipCouch()
    if Player.Character then
        local Tool = Player.Character:FindFirstChildOfClass("Tool")
        if Tool and Tool.Name == "Couch" then
            Tool.Parent = Backpack
        end
    end
end

local function SafeReturn()
    local Player = game.Players.LocalPlayer
    local Character = Player.Character or Player.CharacterAdded:Wait()
    local RootPart = Character:FindFirstChild("HumanoidRootPart")
    local Humanoid = Character:FindFirstChildOfClass("Humanoid")

    if not RootPart or not Humanoid then  
        warn("RootPart ou Humanoid não encontrado.")  
        return  
    end  

    local fixedReturnPos = Vector3.new(1118.81, 75.998, -1138.61)  

    Humanoid.PlatformStand = true  
    RootPart.Anchored = true  
    RootPart.AssemblyLinearVelocity = Vector3.zero  
    RootPart.AssemblyAngularVelocity = Vector3.zero  

    RootPart.CFrame = CFrame.new(fixedReturnPos)  
    print("Jogador teleportado para a posição segura.")  

    task.wait(3)  

    RootPart.Anchored = false  
    Humanoid.PlatformStand = false  
    print("Jogador liberado com segurança.")  
end

local function SkidFling(TargetPlayer)
    if not TargetPlayer then
        return
    end

    EquipCouch()
    
    local Character = Player.Character  
    local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")  
    local RootPart = Humanoid and Humanoid.RootPart  

    local TCharacter = TargetPlayer.Character  
    local TRootPart = TCharacter and TCharacter:FindFirstChild("HumanoidRootPart")  

    if not Character or not Humanoid or not RootPart or not TCharacter or not TRootPart then  
        return  
    end  

    if not getgenv().OldPos then  
        getgenv().OldPos = RootPart.CFrame  
    end  

    if RootPart.Velocity.Magnitude < 50 then  
        getgenv().OldPos = RootPart.CFrame  
    end  

    if TCharacter:FindFirstChildWhichIsA("Seat") then  
        UnequipCouch() 
        return  
    end  

    local function FPos(BasePart, Pos, Ang)  
        RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang  
        Character:SetPrimaryPartCFrame(RootPart.CFrame)  
    end  

    local function SFBasePart(BasePart)  
        local StartTime = tick()  
        local Angle = 0  

        local BV = Instance.new("BodyVelocity")  
        BV.Parent = RootPart  
        BV.Velocity = Vector3.new(1000, 1000, 1000)  
        BV.MaxForce = Vector3.new(math.huge, math.huge, math.huge)  

        Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)  

        repeat  
            Angle = Angle + 100  

            local THumanoid = TargetPlayer.Character:FindFirstChildOfClass("Humanoid")  
            local TRootPart = TCharacter and TCharacter:FindFirstChild("HumanoidRootPart")  

            if THumanoid then  
                if TCharacter:FindFirstChildWhichIsA("Seat") then  
                    UnequipCouch() 
                    return  
                end  

                FPos(BasePart, CFrame.new(0, 2, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))  
                task.wait()  
                FPos(BasePart, CFrame.new(0, -2, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))  
                task.wait()  
                FPos(BasePart, CFrame.new(2.5, 2, -2.5) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))  
                task.wait()  
                FPos(BasePart, CFrame.new(-2.5, -2, 2.5) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))  
                task.wait()  
                FPos(BasePart, CFrame.new(0, 2, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))  
                task.wait()  
                FPos(BasePart, CFrame.new(0, -2, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))  
                task.wait()  
            else  
            
                FPos(BasePart, CFrame.new(0, 2, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))  
                task.wait()  
                FPos(BasePart, CFrame.new(0, -2, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))  
                task.wait()  
                FPos(BasePart, CFrame.new(0, 2, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))  
                task.wait()  
                FPos(BasePart, CFrame.new(0, 2, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))  
                task.wait()  
                FPos(BasePart, CFrame.new(0, -2, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))  
                task.wait()  
                FPos(BasePart, CFrame.new(0, 2, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))  
                task.wait()  
                FPos(BasePart, CFrame.new(0, -2, 0), CFrame.Angles(math.rad(90), 0, 0))  
                task.wait()  
                FPos(BasePart, CFrame.new(0, -2, 0), CFrame.Angles(0, 0, 0))  
                task.wait()  
                FPos(BasePart, CFrame.new(0, -2, 0), CFrame.Angles(math.rad(-90), 0, 0))  
                task.wait()  
                FPos(BasePart, CFrame.new(0, -2, 0), CFrame.Angles(0, 0, 0))  
                task.wait()  
            end  
        until tick() > StartTime + 3 

        UnequipCouch()  

        BV:Destroy()  

        local ReturnPos = getgenv().OldPos  
        if RootPart.Position.Y > ReturnPos.Position.Y then  
  
            ReturnPos = CFrame.new(ReturnPos.Position.X, ReturnPos.Position.Y - (RootPart.Position.Y - ReturnPos.Position.Y), ReturnPos.Position.Z)  
        end  
  
        Humanoid.PlatformStand = true  

        RootPart.CFrame = ReturnPos  
  
        task.wait(1)  
        Humanoid.PlatformStand = false  
        Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)

        SafeReturn()
    end  

workspace.FallenPartsDestroyHeight = -math.huge  

SFBasePart(TRootPart)

end

Tab2:AddButton({
    Name = "Press! Fast - Fling",
    Callback = function()
        if getgenv().Target then
            local TargetPlayer = GetPlayer(getgenv().Target)
            if TargetPlayer then
                SkidFling(TargetPlayer)
            end
        end
    end
})

Tab2:AddButton({
    Name = "Press! Bus - Fling",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character and Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = workspace:FindFirstChild("Vehicles")
        local OldPos = RootPart and RootPart.CFrame

        if not Humanoid or not RootPart then return end

        local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        if not PCar then
            RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
            task.wait(0.5)
            local Remote = game.ReplicatedStorage:FindFirstChild("RE") and game.ReplicatedStorage.RE:FindFirstChild("1Ca1r")
            if Remote then Remote:FireServer("PickingCar", "SchoolBus") end
            task.wait(0.5)
            PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        end

        local timeout = 5
        while timeout > 0 and not PCar do
            task.wait(0.25)
            PCar = Vehicles:FindFirstChild(Player.Name.."Car")
            timeout -= 0.25
        end
        if not PCar then return end

        task.wait(0.5)
        if PCar and not Humanoid.Sit then
            local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
            if Seat then
                repeat task.wait()
                    RootPart.CFrame = Seat.CFrame
                until Humanoid.Sit
            end
        end

        local attachment = nil
        local force = nil

        local function getTargetInfo()
            while true do
                local TargetPlayer = game.Players:FindFirstChild(getgenv().Target)
                if TargetPlayer then
                    local TargetC = TargetPlayer.Character
                    local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")
                    local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")
                    if TargetC and TargetH and TargetRP then
                        return TargetC, TargetH, TargetRP
                    end
                end
                task.wait(0.2)
            end
        end

        local TargetC, TargetH, TargetRP = getTargetInfo()

        attachment = Instance.new("Attachment", TargetRP)
        force = Instance.new("BodyVelocity")
        force.Velocity = Vector3.new(1e9, 1e9, 1e9)
        force.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        force.P = 500
        force.Parent = attachment

        for _, part in ipairs(PCar:GetDescendants()) do
            if part:IsA("BasePart") then
                local bv = Instance.new("BodyVelocity")
                bv.Velocity = Vector3.new(1e9, 1e9, 1e9)
                bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                bv.P = 500
                bv.Parent = part
            end
        end

        local Angles = 0
        local YRotation = 0

        while PCar.Parent do
            task.wait()
            Angles += 100
            YRotation += 5000
            local Rotation = CFrame.Angles(math.rad(Angles), math.rad(YRotation), 0)

            if not (TargetC and TargetH and TargetRP and TargetRP.Parent) then
                TargetC, TargetH, TargetRP = getTargetInfo()
                if attachment then attachment:Destroy() end
                if force then force:Destroy() end
                attachment = Instance.new("Attachment", TargetRP)
                force = Instance.new("BodyVelocity")
                force.Velocity = Vector3.new(1e9, 1e9, 1e9)
                force.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                force.P = 500
                force.Parent = attachment
            end

            local function flingAttack(offset)
                local newPos = TargetRP.Position + offset + (TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.1)
                local newCF = CFrame.new(newPos) * Rotation
                PCar:SetPrimaryPartCFrame(newCF)
            end

            flingAttack(Vector3.new(0, 1, 0))
            flingAttack(Vector3.new(0, -2.25, 5))
            flingAttack(Vector3.new(0, 2.25, 0.25))
            flingAttack(Vector3.new(-2.25, -1.5, 2.25))
            flingAttack(Vector3.new(0, 1.5, 0))
            flingAttack(Vector3.new(0, -1.5, 0))
        end

        if attachment then attachment:Destroy() end
        if force then force:Destroy() end
        Humanoid.Sit = false
        task.wait(0.1)
        if OldPos then RootPart.CFrame = OldPos end
    end
})

Tab2:AddButton({
    Name = "Off Fling - Bus",
    Callback = function()
        local args = {
            [1] = "DeleteAllVehicles"
        }
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer(unpack(args))

        task.wait()

        local Player = game.Players.LocalPlayer
        local Character = Player.Character or Player.CharacterAdded:Wait()
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")

        if not RootPart or not Humanoid then
            warn("RootPart ou Humanoid não encontrado.")
            return
        end

        local fixedReturnPos = Vector3.new(1118.81, 75.998, -1138.61)

        Humanoid.PlatformStand = true
        RootPart.Anchored = true
        RootPart.AssemblyLinearVelocity = Vector3.zero
        RootPart.AssemblyAngularVelocity = Vector3.zero

        RootPart.CFrame = CFrame.new(fixedReturnPos)
        print("Jogador teleportado para a posição segura.")

        RootPart.Anchored = false
        Humanoid.PlatformStand = false
        print("Jogador liberado com segurança.")
    end
})

Tab2:AddButton({
    Name = "Press! Ban - House",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Backpack = Player.Backpack
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Houses = game.Workspace:FindFirstChild("001_Lots")
        local OldPos = RootPart.CFrame
        local Angles = 0
        local YRotation = 0
        local Vehicles = Workspace.Vehicles
        local Pos

        function Check()
            return Player and Character and Humanoid and RootPart and Vehicles
        end

        if not getgenv().Target then return end
        if Check() then
            local House = Houses:FindFirstChild(Player.Name.."House")
            if not House then
                local EHouse
                for _, Lot in pairs(Houses:GetChildren()) do
                    if Lot.Name == "For Sale" then
                        for _, num in pairs(Lot:GetDescendants()) do
                            if num:IsA("NumberValue") and num.Name == "Number" and num.Value < 25 and num.Value > 10 then
                                EHouse = Lot
                                break
                            end
                        end
                    end
                end

                local BuyDetector = EHouse:FindFirstChild("BuyHouse")
                Pos = BuyDetector.Position
                if BuyDetector and BuyDetector:IsA("BasePart") then
                    RootPart.CFrame = BuyDetector.CFrame + Vector3.new(0,-6,0)
                    task.wait(.5)
                    local ClickDetector = BuyDetector:FindFirstChild("ClickDetector")
                    if ClickDetector then
                        fireclickdetector(ClickDetector)
                    end
                end
            end

            task.wait(0.5)
            local PreHouse = Houses:FindFirstChild(Player.Name .. "House")
            if PreHouse then
                task.wait(0.5)
                local Number
                for _, x in pairs(PreHouse:GetDescendants()) do
                    if x.Name == "Number" and x:IsA("NumberValue") then
                        Number = x
                    end
                end
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gettin1gHous1e"):FireServer("PickingCustomHouse", "052_House", Number.Value)
            end

            task.wait(0.5)
            local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
            if not PCar then
                if Check() then
                    RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                    task.wait(0.5)
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                    task.wait(0.5)
                    PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                    task.wait(0.5)
                    local Seat = PCar and PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                    if Seat then
                        repeat task.wait()
                            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                        until Humanoid.Sit
                    end
                end
            end

            task.wait(0.5)
            PCar = Vehicles:FindFirstChild(Player.Name.."Car")
            if PCar then
                if not Humanoid.Sit then
                    local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                    if Seat then
                        repeat task.wait()
                            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                        until Humanoid.Sit
                    end
                end

                local Target = game.Players:FindFirstChild(getgenv().Target)
                local TargetC = Target and Target.Character
                local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")
                local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")

                if TargetC and TargetH and TargetRP then
                    if not TargetH.Sit then
                        while not TargetH.Sit do
                            task.wait()
                            local Fling = function(alvo, pos, angulo)
                                PCar:SetPrimaryPartCFrame(CFrame.new(alvo.Position) * pos * angulo)
                            end
                            
                            Angles = Angles + 100
                            YRotation = YRotation + 5000

                            local Rotation = CFrame.Angles(math.rad(Angles), math.rad(YRotation), 0)

                            Fling(TargetRP, CFrame.new(0, 1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                            Fling(TargetRP, CFrame.new(0, -1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                            Fling(TargetRP, CFrame.new(2.25, 1.5, -2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                            Fling(TargetRP, CFrame.new(-2.25, -1.5, 2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                        end

                        task.wait(0.2)
                        local House = Houses:FindFirstChild(Player.Name.."House")
                        PCar:SetPrimaryPartCFrame(CFrame.new(House.HouseSpawnPosition.Position))
                        task.wait(0.2)
                        local Region = Region3.new(RootPart.Position - Vector3.new(30,30,30), RootPart.Position + Vector3.new(30,30,30))
                        local Parts = workspace:FindPartsInRegion3(Region, RootPart, math.huge)

                        for _, v in pairs(Parts) do
                            if v.Name == "HumanoidRootPart" then
                                local BannedPlayer = game:GetService("Players"):FindFirstChild(v.Parent.Name)
                                local args = { "BanPlayerFromHouse", BannedPlayer, v.Parent }
                                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))

                                local argsDelete = { "DeleteAllVehicles" }
                                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer(unpack(argsDelete))
                            end
                        end
                    end
                end
            end
        end
    end
})

Tab2:AddButton({
    Name = "Press! Car - Jail",
    Callback = function()
        -- Cria um baseplate na coordenada 0, -610, 0
        local baseplate = Instance.new("Part")
        baseplate.Size = Vector3.new(100, 1, 100)
        baseplate.Position = Vector3.new(0, -610, 0)
        baseplate.Anchored = true
        baseplate.Color = Color3.fromRGB(255, 255, 255)
        baseplate.Parent = game.Workspace

        local Target = getgenv().Target
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")
        local OldPos = RootPart.CFrame

        if not Target or not Humanoid then return end

        local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        if not PCar then
            if RootPart and Target then 
                RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                task.wait(0.5)
                PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                task.wait(0.5)
                local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                if Seat then
                    repeat task.wait()
                        RootPart.CFrame = Seat.CFrame
                    until Humanoid.Sit
                end
            end
        end

        task.wait(0.5)
        PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        if PCar and not Humanoid.Sit then
            local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
            if Seat then
                repeat task.wait()
                    RootPart.CFrame = Seat.CFrame
                until Humanoid.Sit
            end
        end

        local TargetPlayer = game.Players:FindFirstChild(getgenv().Target)
        if TargetPlayer then
            local TargetC = TargetPlayer.Character
            local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")
            local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")

            if TargetC and TargetH and TargetRP then
                if not TargetH.Sit then
                    local Angles = 0
                    local YRotation = 0

                    while not TargetH.Sit do
                        task.wait()

                        Angles = Angles + 100
                        YRotation = YRotation + 5000
                        local Rotation = CFrame.Angles(math.rad(Angles), math.rad(YRotation), 0)

                        local moveCar = function(alvo, offset)
                            local newPosition = alvo.Position + offset
                            local newCFrame = CFrame.new(newPosition) * Rotation
                            PCar:SetPrimaryPartCFrame(newCFrame)
                        end

                        moveCar(TargetRP, Vector3.new(0, 1, 0))
                        moveCar(TargetRP, Vector3.new(0, -2.25, 5))
                        moveCar(TargetRP, Vector3.new(0, 2.25, 0.25))
                        moveCar(TargetRP, Vector3.new(-2.25, -1.5, 2.25))
                        moveCar(TargetRP, Vector3.new(0, 1.5, 0))
                        moveCar(TargetRP, Vector3.new(0, -1.5, 0))
                    end

                    task.wait(0.1)
                    PCar:SetPrimaryPartCFrame(CFrame.new(0, -600, 0))

                    task.wait(0.2)
                    Humanoid.Sit = false
                    task.wait(0.1)
                    RootPart.CFrame = OldPos
                end
            end
        end
    end
})

Tab2:AddButton({
    Name = "Press! Car - Kill",
    Callback = function()
        local Target = getgenv().Target
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")
        local OldPos = RootPart.CFrame

        if not Target or not Humanoid then return end

        local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        if not PCar then
            if RootPart and Target then 
                RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                task.wait(0.5)
                PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                task.wait(0.5)
                local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                if Seat then
                    repeat task.wait()
                        RootPart.CFrame = Seat.CFrame
                    until Humanoid.Sit
                end
            end
        end

        task.wait(0.5)
        PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        if PCar and not Humanoid.Sit then
            local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
            if Seat then
                repeat task.wait()
                    RootPart.CFrame = Seat.CFrame
                until Humanoid.Sit
            end
        end

        local TargetPlayer = game.Players:FindFirstChild(getgenv().Target)
        if TargetPlayer then
            local TargetC = TargetPlayer.Character
            local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")
            local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")

            if TargetC and TargetH and TargetRP then
                if not TargetH.Sit then
                    local Angles = 0
                    local YRotation = 0

                    while not TargetH.Sit do
                        task.wait()

                        Angles = Angles + 100
                        YRotation = YRotation + 5000
                        local Rotation = CFrame.Angles(math.rad(Angles), math.rad(YRotation), 0)

                        local kill = function(alvo, pos)
                            local newPosition = alvo.Position + pos + (TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.05)
                            local newCFrame = CFrame.new(newPosition) * Rotation
                            PCar:SetPrimaryPartCFrame(newCFrame)
                        end

                        kill(TargetRP, Vector3.new(0, 1, 0))
                        kill(TargetRP, Vector3.new(0, -2.25, 5))
                        kill(TargetRP, Vector3.new(0, 2.25, 0.25))
                        kill(TargetRP, Vector3.new(-2.25, -1.5, 2.25))
                        kill(TargetRP, Vector3.new(0, 1.5, 0))
                        kill(TargetRP, Vector3.new(0, -1.5, 0))
                    end

                    task.wait(0.1)
                    PCar:SetPrimaryPartCFrame(CFrame.new(0, -470, 0))
                    task.wait(0.2)


                    Humanoid.Sit = false
                    task.wait(0.1)
                    RootPart.CFrame = OldPos
                end
            end
        end
    end
})

local function bringPlayer()
    local Target = getgenv().Target
    local Player = game.Players.LocalPlayer
    local Character = Player.Character
    local Humanoid = Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Character:FindFirstChild("HumanoidRootPart")
    local Vehicles = game.Workspace:FindFirstChild("Vehicles")
    local OldPos = RootPart.CFrame
    if not Target or not Humanoid then return end
 
    local PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
    if not PCar then
        if RootPart and Target then
            RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
            task.wait(0.5)
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
            task.wait(0.5)
            PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
            task.wait(0.5)
            local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
            if Seat then
                repeat task.wait()
                    RootPart.CFrame = Seat.CFrame
                until Humanoid.Sit
            end
        end
    end

    task.wait(0.5)
    PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
    if PCar and not Humanoid.Sit then
        local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
        if Seat then
            repeat task.wait()
                RootPart.CFrame = Seat.CFrame
            until Humanoid.Sit
        end
    end

    local TargetPlayer = game.Players:FindFirstChild(getgenv().Target)
    local TargetC = TargetPlayer and TargetPlayer.Character
    local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")
    local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")

    if TargetC and TargetH and TargetRP then
        if not TargetH.Sit then
            local Angles = 0
            local YRotation = 0

            while not TargetH.Sit do
                task.wait()

                Angles = Angles + 100
                YRotation = YRotation + 5000
                local Rotation = CFrame.Angles(math.rad(Angles), math.rad(YRotation), 0)

                local bring = function(alvo, pos)
                    local newPosition = alvo.Position + pos + (TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.05)
                    local newCFrame = CFrame.new(newPosition) * Rotation
                    PCar:SetPrimaryPartCFrame(newCFrame)
                end

                bring(TargetRP, Vector3.new(0, 1, 0))
                bring(TargetRP, Vector3.new(0, -2.25, 5))
                bring(TargetRP, Vector3.new(0, 2.25, 0.25))
                bring(TargetRP, Vector3.new(-2.25, -1.5, 2.25))
                bring(TargetRP, Vector3.new(0, 1.5, 0))
                bring(TargetRP, Vector3.new(0, -1.5, 0))
            end

            task.wait(0.1)
            PCar:SetPrimaryPartCFrame(OldPos)
            task.wait(0.2)
            Humanoid.Sit = false
            task.wait(0.1)

            task.wait(0.1)
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("DeleteAllVehicles")
        end
    end
end

Tab2:AddButton({
    Name = "Press! Car - Bring",
    Callback = function()
        bringPlayer()
    end
})

local Section = Tab2:AddSection({"KILL EM GERAL"})

Tab2:AddButton({
    Name = "Press! Bus - Fling All",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character and Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = workspace:FindFirstChild("Vehicles")
        local OldPos = RootPart and RootPart.CFrame

        if not Humanoid or not RootPart then return end

        local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        if not PCar then
            RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
            task.wait(0.5)
            local Remote = game.ReplicatedStorage:FindFirstChild("RE") and game.ReplicatedStorage.RE:FindFirstChild("1Ca1r")
            if Remote then Remote:FireServer("PickingCar", "SchoolBus") end
            task.wait(0.5)
            PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        end

        local timeout = 5
        while timeout > 0 and not PCar do
            task.wait(0.25)
            PCar = Vehicles:FindFirstChild(Player.Name.."Car")
            timeout -= 0.25
        end
        if not PCar then return end

        task.wait(0.5)
        if PCar and not Humanoid.Sit then
            local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
            if Seat then
                repeat task.wait()
                    RootPart.CFrame = Seat.CFrame
                until Humanoid.Sit
            end
        end

        for _, part in ipairs(PCar:GetDescendants()) do
            if part:IsA("BasePart") then
                local bv = Instance.new("BodyVelocity")
                bv.Velocity = Vector3.new(1e9, 1e9, 1e9)
                bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                bv.P = 500
                bv.Parent = part
            end
        end

        task.spawn(function()
            local Angles = 0
            local YRotation = 0

            while PCar.Parent do
                for _, target in ipairs(game.Players:GetPlayers()) do
                    if target ~= Player then
                        local TargetC = target.Character
                        local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")
                        local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")

                        if TargetC and TargetH and TargetRP then

                            local attachment = Instance.new("Attachment", TargetRP)
                            local force = Instance.new("BodyVelocity")
                            force.Velocity = Vector3.new(1e9, 1e9, 1e9)
                            force.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                            force.P = 500
                            force.Parent = attachment

                            local startTime = tick()
                            while tick() - startTime < 2 and TargetRP.Parent and PCar.Parent do
                                task.wait()
                                Angles += 100
                                YRotation += 5000
                                local Rotation = CFrame.Angles(math.rad(Angles), math.rad(YRotation), 0)

                                local function flingAttack(offset)
                                    local newPos = TargetRP.Position + offset + (TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.1)
                                    local newCF = CFrame.new(newPos) * Rotation
                                    PCar:SetPrimaryPartCFrame(newCF)
                                end

                                flingAttack(Vector3.new(0, 1, 0))
                                flingAttack(Vector3.new(0, -2.25, 5))
                                flingAttack(Vector3.new(0, 2.25, 0.25))
                                flingAttack(Vector3.new(-2.25, -1.5, 2.25))
                                flingAttack(Vector3.new(0, 1.5, 0))
                                flingAttack(Vector3.new(0, -1.5, 0))
                            end

                            attachment:Destroy()
                            force:Destroy()
                        end
                    end
                end
            end
        end)

        repeat task.wait() until not PCar or not PCar.Parent
        Humanoid.Sit = false
        task.wait(0.1)
        if OldPos then RootPart.CFrame = OldPos end
    end
})

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local localPlayer = Players.LocalPlayer
local BALL_PATH = "WorkspaceCom/001_SoccerBalls/Soccer" .. localPlayer.Name

getgenv().Target = nil
local ball, connection
local isFlinging = false 

local function clearForces(targetBall)
	for _, obj in ipairs(targetBall:GetChildren()) do
		if obj:IsA("BodyForce") or obj:IsA("BodyVelocity") or obj:IsA("BodyPosition") then
			obj:Destroy()
		end
	end
end

local function ignorePlayerCollision(targetBall, targetCharacter)
	for _, part in ipairs(targetCharacter:GetDescendants()) do
		if part:IsA("BasePart") then
			local constraint = Instance.new("NoCollisionConstraint")
			constraint.Part0 = targetBall
			constraint.Part1 = part
			constraint.Parent = targetBall
		end
	end
end

local function applyFlingForces(targetBall)
	clearForces(targetBall)

	local bodyForce = Instance.new("BodyForce")
	bodyForce.Force = Vector3.new(5e7, 5e7, 5e7)
	bodyForce.Parent = targetBall

	local bodyVelocity = Instance.new("BodyVelocity")
	bodyVelocity.Velocity = Vector3.new(9e6, 9e6, 9e6)
	bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
	bodyVelocity.P = 4e7
	bodyVelocity.Parent = targetBall
end

function setupBall()
	local targetName = getgenv().Target
	if not targetName then return end

	local targetPlayer = Players:FindFirstChild(targetName)
	if not targetPlayer then return end

	local character = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
	local torso = character:FindFirstChild("UpperTorso") or character:FindFirstChild("Torso")
	if not torso then return end

	local success, foundBall = pcall(function()
		local obj = workspace
		for _, part in ipairs(BALL_PATH:split("/")) do
			obj = obj:WaitForChild(part, 5)
		end
		return obj
	end)

	if not success or not foundBall then return end

	ball = foundBall
	ball.Anchored = false
	ball.CanCollide = true
	ball.Massless = false

	clearForces(ball)
	ignorePlayerCollision(ball, character)
	applyFlingForces(ball)

	if connection then connection:Disconnect() end

	local toggle = true
	connection = RunService.Heartbeat:Connect(function()
		if not ball or not torso then
			connection:Disconnect()
			return
		end

		local forward = torso.CFrame.LookVector
		local basePos = torso.Position + Vector3.new(0, 0.5, 0)
		local offset = forward * (toggle and 35 or -35)
		ball.CFrame = CFrame.new(basePos + offset)
		toggle = not toggle
	end)

	targetPlayer.CharacterAdded:Connect(function()
		task.wait(1)
		setupBall()
	end)
end

local function startFlingBallAll()
	isFlinging = true
	while isFlinging do
		local allPlayers = Players:GetPlayers()
		for _, player in ipairs(allPlayers) do
			if player ~= localPlayer then
				getgenv().Target = player.Name
				setupBall()
				task.wait(3)
			end
		end
	end
end

Tab2:AddButton({
	Name = "Fling Ball All",
	Callback = function()
		if not isFlinging then
			startFlingBallAll()
		else
			warn("O Fling Ball já está ativo em todos os jogadores.")
		end
	end
})

Tab2:AddButton({
    Name = "Fling Bus - All",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character and Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")

        local Whitelist = {
            ["kauxz016"] = true,
            ["goduser573"] = true,
            ["NOEL_A21S"] = true,
            ["Usuario_X1x1x1"] = true,
            ["Myst_gamemy34"] = true,
            ["vehshddhdhdhh"] = true,
        }

        if not Humanoid or not RootPart then
            warn("Jogador sem Humanoid/RootPart")
            return
        end

        local function spawnBoat()
            RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
            task.wait(0.5)
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
            task.wait(1)
            return Vehicles:FindFirstChild(Player.Name.."Car")
        end

        local PCar = Vehicles:FindFirstChild(Player.Name.."Car") or spawnBoat()
        if not PCar then
            warn("Falha ao spawnar o barco")
            return
        end

        local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
        if not Seat then
            warn("Nenhum assento encontrado no barco")
            return
        end

        repeat 
            task.wait()
            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
        until Humanoid.Sit

        local SpinGyro = Instance.new("BodyGyro")
        SpinGyro.Parent = PCar.PrimaryPart
        SpinGyro.MaxTorque = Vector3.new(1e12, 1e12, 1e12)
        SpinGyro.P = 1e12
        SpinGyro.CFrame = PCar.PrimaryPart.CFrame

        print("SpinGyro ativado no barco! Rotação centrífuga aplicada!")

        local function flingTarget(TargetPlayer)
            local TargetC = TargetPlayer.Character
            local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")
            local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")

            if not TargetRP or not TargetH then
                warn("Alvo sem Humanoid/RootPart")
                return
            end

            local angle = 0
            local radius = 5
            local speed = 0.1
            local expansionRate = 0.2

            local startTime = tick()
            while tick() - startTime < 3 and PCar and PCar.Parent do
                task.wait(0.1)

                local offsetX = math.cos(angle) * radius
                local offsetZ = math.sin(angle) * radius
                local moveTo = TargetRP.Position + Vector3.new(offsetX, 0, offsetZ)

                PCar:SetPrimaryPartCFrame(CFrame.new(moveTo) * CFrame.Angles(0, math.rad(180), 0))

                angle = angle + speed
                radius = math.max(radius - expansionRate, 1)

                if (PCar.PrimaryPart.Position - TargetRP.Position).Magnitude < 3 then
                    speed = speed + 0.2
                    expansionRate = expansionRate + 0.1
                end
            end
        end

        task.spawn(function()
            while PCar and PCar.Parent do
                for _, TargetPlayer in pairs(game.Players:GetPlayers()) do
                    if TargetPlayer ~= Player and not Whitelist[TargetPlayer.Name] then
                        flingTarget(TargetPlayer)
                    end
                end
            end
        end)
    end
})

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Backpack = Player:FindFirstChild("Backpack")
local AllBool = false

getgenv().Target = nil
local forceActive = false
local BV

local function GetPlayer(Name)
    Name = Name:lower()
    for _, x in next, Players:GetPlayers() do
        if x ~= Player then
            if x.Name:lower():match("^" .. Name) or x.DisplayName:lower():match("^" .. Name) then
                return x
            end
        end
    end
    return nil
end

local function EquipCouch()
    if Backpack then
        local Couch = Backpack:FindFirstChild("Couch")
        if Couch then
            Player.Character.Humanoid:EquipTool(Couch)
        end
    end
end

local function UnequipCouch()
end

local function SkidFling(TargetPlayer)
    if not TargetPlayer then
        return
    end

    EquipCouch()

    local Character = Player.Character
    local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Humanoid and Humanoid.RootPart

    local TCharacter = TargetPlayer.Character
    local TRootPart = TCharacter and TCharacter:FindFirstChild("HumanoidRootPart")

    if not Character or not Humanoid or not RootPart or not TCharacter or not TRootPart then
        return
    end

    if RootPart.Velocity.Magnitude < 50 then
        getgenv().OldPos = RootPart.CFrame
    end

    if TCharacter:FindFirstChildWhichIsA("Seat") then
        UnequipCouch() 
        
        return
    end

    local function FPos(BasePart, Pos, Ang)
        RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
        Character:SetPrimaryPartCFrame(RootPart.CFrame)
        RootPart.Velocity = Vector3.new(1e19, 1e19, 1e19)
    end

    local function SFBasePart(BasePart)
        local StartTime = tick()
        local Angle = 0

        repeat
            Angle = Angle + 100

            local THumanoid = TargetPlayer.Character:FindFirstChildOfClass("Humanoid")
            local TRootPart = TCharacter and TCharacter:FindFirstChild("HumanoidRootPart")

            if THumanoid then
                if TCharacter:FindFirstChildWhichIsA("Seat") then
                    UnequipCouch() 
                    return
                end

                FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
            else

                FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(-90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                task.wait()
            end
        until BasePart.Parent ~= TargetPlayer.Character or Humanoid.Health <= 0 or tick() > StartTime + 2 or TCharacter:FindFirstChildWhichIsA("Seat")
    end

    workspace.FallenPartsDestroyHeight = -math.huge

 (simbolicamente math.huge)
    BV = Instance.new("BodyVelocity")
    BV.Parent = RootPart
    BV.Velocity = Vector3.new(1e12, 1e12, 1e12)
    BV.MaxForce = Vector3.new(math.huge, math.huge, math.huge)

    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)

    SFBasePart(TRootPart)

    forceActive = true

    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)

    RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
    Humanoid.PlatformStand = true

    task.wait(1)
    Humanoid.PlatformStand = false

    if BV then
        BV:Destroy()
    end
end

local function onDeath()

    forceActive = false
    if BV then
        BV:Destroy()
    end
end

Player.Character:WaitForChild("Humanoid").Died:Connect(onDeath)

Tab2:AddButton({
    Name = "Fast - Fling All",
    Callback = function()
        local players = Players:GetPlayers()
        local playerIndex = 1

        local function FlingNextPlayer()
            if playerIndex <= #players then
                local TargetPlayer = players[playerIndex]

                if TargetPlayer == Player then
                    playerIndex = playerIndex + 1
                    return FlingNextPlayer()
                end

                local args = {
                    [1] = "PickingTools",
                    [2] = "Couch"
                }

                local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
                if remoteFunction then
                    remoteFunction:InvokeServer(unpack(args))
                    task.wait(0.2)
                end

                EquipCouch()
                task.wait(0.1)

                SkidFling(TargetPlayer)
                UnequipCouch()
                task.wait(0.2)

                playerIndex = playerIndex + 1
                FlingNextPlayer()
            end
        end

        FlingNextPlayer()
    end
})

Tab2:AddButton({
    Name = "House Kill - All",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Backpack = Player.Backpack
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Houses = game.Workspace:FindFirstChild("001_Lots")
        local Vehicles = Workspace.Vehicles

        local Whitelist = {
            ["Miguel_rbx1038"] = true,
            ["goduser573"] = true,
            ["NOEL_A21S"] = true,
            ["Usuario_X1x1x1"] = true,
            ["Myst_gamemy34"] = true,
            ["vehshddhdhdhh"] = true,
        }

        function Check()
            return Player and Character and Humanoid and RootPart and Vehicles
        end

        local function SpawnCar()
            if Check() then
                local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                if not PCar then
                    RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                    task.wait(0.5)
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                    task.wait(0.5)
                    PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                    task.wait(0.5)
                    local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                    if Seat then
                        repeat task.wait()
                            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                        until Humanoid.Sit
                    end
                end
            end
        end

        if Check() then
            for _, Target in pairs(game.Players:GetPlayers()) do
                if Target ~= Player and Target.Character then
                    if not Whitelist[Target.Name] then
                        local TargetC = Target.Character
                        local TargetH = TargetC:FindFirstChildOfClass("Humanoid")
                        local TargetRP = TargetC:FindFirstChild("HumanoidRootPart")
                        if TargetH and TargetRP then
                            SpawnCar()

                            if not TargetH.Sit then
                                local Angles = 0 
                                local startTime = os.clock() 
                                local timeLimit = 5

                                while not TargetH.Sit do
                                    task.wait()
        
                                    if os.clock() - startTime > timeLimit then
                                        break 
                                    end

                                    local Fling = function(alvo, pos, angulo)
                                        local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                                        if PCar then
                                            PCar:SetPrimaryPartCFrame(CFrame.new(alvo.Position) * pos * angulo)
                                        end
                                    end

                                    Angles = Angles + 100
                                    local Rotation = CFrame.Angles(0, math.rad(Angles), 0)
                                    
                                    Fling(TargetRP, CFrame.new(0, 1, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                                    Fling(TargetRP, CFrame.new(0, -1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                                    Fling(TargetRP, CFrame.new(2.25, 1.5, -2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                                    Fling(TargetRP, CFrame.new(-2.25, -1.5, 2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                                end

                                task.wait(0.2)
                                local House = Houses:FindFirstChild(Player.Name.."House")
                                local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                                if PCar then
                                    PCar:SetPrimaryPartCFrame(CFrame.new(House.HouseSpawnPosition.Position))
                                end
                                task.wait(0.2)
                                local pedro = Region3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(30, 30, 30), game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(30, 30, 30))

                                local a = workspace:FindPartsInRegion3(pedro, game.Players.LocalPlayer.Character.HumanoidRootPart, math.huge)

                                for i, v in pairs(a) do
                                    if v.Name == "HumanoidRootPart" then
                                        local b = game:GetService("Players"):FindFirstChild(v.Parent.Name)
                                        local args = {
                                            [1] = "BanPlayerFromHouse",
                                            [2] = b,
                                            [3] = v.Parent
                                        }

                                        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))

                                        local args = {
                                            [1] = "DeleteAllVehicles"
                                        }
                                        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer(unpack(args))
                                    end
                                end
                            end
                        end
                    end
                end
                task.wait(0.2)
            end
        end
    end
})

Tab2:AddButton({
    Name = "Bus Bring - All",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")
        local OldPos = RootPart.CFrame  

        if not Humanoid or not RootPart then return end

        local ProtectedList = {
            ["kauxz016"] = true,
            ["goduser573"] = true,
            ["NOEL_A21S"] = true,
            ["Usuario_X1x1x1"] = true,
            ["Myst_gamemy34"] = true,
            ["vehshddhdhdhh"] = true,
        }

        local PlayersList = {}
        for _, p in pairs(game.Players:GetPlayers()) do
            if p ~= Player and not ProtectedList[p.Name] then
                table.insert(PlayersList, p)
            end
        end

        local function ProcessPlayer(TargetPlayer)
            local PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
            if not PCar then
                
                RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                task.wait(0.5)
                PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
                local Seat = PCar and PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                if Seat then
                    repeat
                        task.wait()
                        RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                    until Humanoid.Sit
                end
            end

            local TargetC = TargetPlayer.Character
            if TargetC then
                local TargetH = TargetC:FindFirstChildOfClass("Humanoid")
                local TargetRP = TargetC:FindFirstChild("HumanoidRootPart")
                if TargetH and TargetRP then
                    local startTime = os.clock() 
                    local timeLimit = 3

                    while not TargetH.Sit do
                        task.wait()

                        if os.clock() - startTime > timeLimit then
                            break
                        end

                        local randomX = math.random(-360, 360)
                        local randomY = math.random(-360, 360)
                        local randomZ = math.random(-360, 360)

                        local moveCar = function(alvo, offset, rotation)
                            local newPosition = alvo.Position + offset
                            local newCFrame = CFrame.new(newPosition) * rotation
                            PCar:SetPrimaryPartCFrame(newCFrame)
                        end

                        moveCar(TargetRP, Vector3.new(0, 1, 0), CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                        moveCar(TargetRP, Vector3.new(0, -2.25, 5), CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                        moveCar(TargetRP, Vector3.new(0, 2.25, 0.25), CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                    end

                    task.wait(0.1)
                    PCar:SetPrimaryPartCFrame(OldPos)
                    
                    task.wait(0.6)
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("DeleteAllVehicles")
                    task.wait(0.2)
                    Humanoid.Sit = false
                    RootPart.CFrame = OldPos
                end
            end
        end

        for _, TargetPlayer in ipairs(PlayersList) do
            ProcessPlayer(TargetPlayer)
        end
    end
})

Tab2:AddButton({
    Name = "Bus Kill - All",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")
        local OldPos = RootPart.CFrame

        if not Humanoid or not RootPart then return end

        local ProtectedList = {
            ["kauxz016"] = true,
            ["goduser573"] = true,
            ["NOEL_A21S"] = true,
            ["Usuario_X1x1x1"] = true,
            ["Myst_gamemy34"] = true,
            ["vehshddhdhdhh"] = true,
        }

        local PlayersList = {}
        for _, p in pairs(game.Players:GetPlayers()) do
            if p ~= Player and not ProtectedList[p.Name] then
                table.insert(PlayersList, p)
            end
        end

        local function ProcessPlayer(TargetPlayer)
            local PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
            if not PCar then
            
                RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                task.wait(0.5)
                PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
                local Seat = PCar and PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                if Seat then
                    repeat
                        task.wait()
                        RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                    until Humanoid.Sit
                end
            end

            local TargetC = TargetPlayer.Character
            if TargetC then
                local TargetH = TargetC:FindFirstChildOfClass("Humanoid")
                local TargetRP = TargetC:FindFirstChild("HumanoidRootPart")
                if TargetH and TargetRP then
                    local startTime = os.clock() 
                    local timeLimit = 3 

                    while not TargetH.Sit do
                        task.wait()

                        if os.clock() - startTime > timeLimit then
                            break
                        end

                        local randomX = math.random(-1000, 1000)
                        local randomY = math.random(-1000, 1000)
                        local randomZ = math.random(-1000, 1000)

                        local moveCar = function(alvo, offset, rotation)
                            local newPosition = alvo.Position + offset
                            local newCFrame = CFrame.new(newPosition) * rotation
                            PCar:SetPrimaryPartCFrame(newCFrame)
                        end

                        moveCar(TargetRP, Vector3.new(0, 1, 0), CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                        moveCar(TargetRP, Vector3.new(0, -2.25, 5), CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                        moveCar(TargetRP, Vector3.new(0, 2.25, 0.25), CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                    end

                    task.wait(0.1)
                    PCar:SetPrimaryPartCFrame(CFrame.new(0, -600, 0))

                    task.wait(0.6)
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("DeleteAllVehicles")
                    task.wait(0.2)
                    Humanoid.Sit = false
                    RootPart.CFrame = OldPos
                end
            end
        end

        for _, TargetPlayer in ipairs(PlayersList) do
            ProcessPlayer(TargetPlayer)
        end
    end
})

local Tab3 = Window:MakeTab({"Teleports", "rbxassetid://10734886202"})

local Section = Tab3:AddSection({"Tab Teleports"})

local function safeCall(func)
    local success, err = pcall(func)
    if not success then
        warn("Erro detectado: " .. err)
    end
end

local TweenService = game:GetService("TweenService")
local function teleportWithTween(targetPosition)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    if targetPosition and humanoidRootPart then

        local goal = {CFrame = CFrame.new(targetPosition)}
        local tweenInfo = TweenInfo.new(
            1,
            Enum.EasingStyle.Linear, 
            Enum.EasingDirection.Out, 
            0,
            false,
            0
        )
        local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
        tween:Play()
    else
        warn("Posição ou personagem inválido para teleporte!")
    end
end

Tab3:AddButton({
    Name = "Teleporte Início",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-26.78652572631836, 4.549376010894775, -16.024940490722656))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Burger Barn",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(149.81997680664062, 5.549376010894775, 60.242340087890625))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Motel",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(170.19615173339844, 5.54937219619751, 266.0609130859375))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Delegacia",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-119.89958953857422, 4.6405110359191895, 8.176092147827148))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Sorveteria",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-130.0745391845703, 4.649374485015869, -127.652099609375))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Jogos",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-168.06399536132812, 4.649374961853027, -112.33914947509766))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Cabeleleiro",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-72.25192260742188, 4.649374485015869, -122.56947326660156))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Mercado",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(10.353360176086426, 4.649375915527344, -115.0977783203125))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Shopping",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(153.75360107421875, 4.7751994132995605, -146.44395446777344))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Cinema",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(198.99610900878906, -33.06062316894531, -179.75094604492188))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Aeroporto",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(295.1387023925781, 5.54937219619751, 40.569091796875))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Banco",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(1.0743072032928467, 4.549375534057617, 237.57664489746094))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Loja de roupas",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-41.54917907714844, 4.549374580383301, 238.71658325195312))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Café",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-96.89099884033203, 4.549375534057617, 236.6632537841797))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Biblioteca",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-129.83163452148438, 4.549375534057617, 242.130859375))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Correios",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-183.43508911132812, 4.549375057220459, 240.82992553710938))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Escola",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-301.6554870605469, 4.749375343322754, 212.3376922607422))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Hospital",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-304.6522521972656, 4.635624408721924, 14.170400619506836))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Prefeitura",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-354.39959716796875, 8.554941177368164, -101.75442504882812))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Bombeiros",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-430.8517761230469, 4.549376964569092, -103.40835571289062))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Cavalos da Fazenda",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-765.745361328125, 4.149374961853027, -60.72247314453125))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Fazenda",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-842.8758544921875, 4.149374961853027, -395.3680419921875))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Montanha dos Drones",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-661.0484008789062, 251.37303161621094, 753.8473510742188))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Praia",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-236.48675537109375, 1.1355772018432617, 760.2517700195312))
        end)
    end
})

Tab3:AddButton({
    Name = "Teleporte Casa Na Floresta",
    Callback = function()
        safeCall(function()
            teleportWithTween(Vector3.new(-186.2555389404297, 4.149374961853027, 1067.5672607421875))
        end)
    end
})

local Tab4 = Window:MakeTab({"Items", "rbxassetid://10709769841"})

local Section = Tab4:AddSection({"Aba Items"})

Button = Tab4:AddButton({
  Name = "Obter Cartão de Energia",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "PowerKeyCard"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Pegar Cristal 1",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "Crystal"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Pegar Cristal 2",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "Crystals"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Obter Chave Antiga",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "OldKey"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Pegar Espada de Ouro",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "SwordGold"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Obter Cartão da Agência Secreta",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "KeyCardDarkGreen"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Pegar Mangueira de Incêndio",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "FireHose"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Obter Livro Secreto da Agência",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "AgencyBook"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Obter Cartão Branco do Banco",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "KeyCardWhite"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Pegar Sofá de Luxo",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "Couch"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Pegar Saco de Diamantes",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "DuffleBagDiamonds"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Obter Chave Preta do Banco",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "BankGateKey"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

local Tab7 = Window:MakeTab({"Avatar", "rbxassetid://10734952036"})

local Section = Tab7:AddSection({"Tab Avatar"})

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Remotes = ReplicatedStorage:WaitForChild("Remotes")

local Target = nil

local function GetPlayerNames()
    local PlayerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(PlayerNames, player.Name)
    end
    return PlayerNames
end

local Dropdown = Tab7:AddDropdown({
    Name = "Selecionar Jogador Para a Cópia",
    Options = GetPlayerNames(),
    Default = Target,
    Callback = function(Value)
        Target = Value
    end
})

local function UpdateDropdown()
    Dropdown:Refresh(GetPlayerNames(), true)
end

Players.PlayerAdded:Connect(UpdateDropdown)
Players.PlayerRemoving:Connect(UpdateDropdown)

Tab7:AddButton({
    Name = "Copy Avatar",
    Callback = function()
        if not Target then return end

        local LP = Players.LocalPlayer
        local LChar = LP.Character
        local TPlayer = Players:FindFirstChild(Target)

        if TPlayer and TPlayer.Character then
            local LHumanoid = LChar and LChar:FindFirstChildOfClass("Humanoid")
            local THumanoid = TPlayer.Character:FindFirstChildOfClass("Humanoid")

            if LHumanoid and THumanoid then
                
                local LDesc = LHumanoid:GetAppliedDescription()

                for _, acc in ipairs(LDesc:GetAccessories(true)) do
                    if acc.AssetId and tonumber(acc.AssetId) then
                        Remotes.Wear:InvokeServer(tonumber(acc.AssetId))
                        task.wait(0.2)
                    end
                end

                if tonumber(LDesc.Shirt) then
                    Remotes.Wear:InvokeServer(tonumber(LDesc.Shirt))
                    task.wait(0.2)
                end

                if tonumber(LDesc.Pants) then
                    Remotes.Wear:InvokeServer(tonumber(LDesc.Pants))
                    task.wait(0.2)
                end

                if tonumber(LDesc.Face) then
                    Remotes.Wear:InvokeServer(tonumber(LDesc.Face))
                    task.wait(0.2)
                end

                local PDesc = THumanoid:GetAppliedDescription()

                local argsBody = {
                    [1] = {
                        [1] = PDesc.Torso,
                        [2] = PDesc.RightArm,
                        [3] = PDesc.LeftArm,
                        [4] = PDesc.RightLeg,
                        [5] = PDesc.LeftLeg,
                        [6] = PDesc.Head
                    }
                }
                Remotes.ChangeCharacterBody:InvokeServer(unpack(argsBody))
                task.wait(0.4)

                if tonumber(PDesc.Shirt) then
                    Remotes.Wear:InvokeServer(tonumber(PDesc.Shirt))
                    task.wait(0.3)
                end

                if tonumber(PDesc.Pants) then
                    Remotes.Wear:InvokeServer(tonumber(PDesc.Pants))
                    task.wait(0.3)
                end

                if tonumber(PDesc.Face) then
                    Remotes.Wear:InvokeServer(tonumber(PDesc.Face))
                    task.wait(0.3)
                end

                for _, v in ipairs(PDesc:GetAccessories(true)) do
                    if v.AssetId and tonumber(v.AssetId) then
                        Remotes.Wear:InvokeServer(tonumber(v.AssetId))
                        task.wait(0.3)
                    end
                end

                local SkinColor = TPlayer.Character:FindFirstChild("Body Colors")
                if SkinColor then
                    Remotes.ChangeBodyColor:FireServer(tostring(SkinColor.HeadColor))
                    task.wait(0.3)
                end

                if tonumber(PDesc.IdleAnimation) then
                    Remotes.Wear:InvokeServer(tonumber(PDesc.IdleAnimation))
                    task.wait(0.3)
                end

                local Bag = TPlayer:FindFirstChild("PlayersBag")
                if Bag then
                    if Bag:FindFirstChild("RPName") and Bag.RPName.Value ~= "" then
                        Remotes.RPNameText:FireServer("RolePlayName", Bag.RPName.Value)
                        task.wait(0.3)
                    end
                    if Bag:FindFirstChild("RPBio") and Bag.RPBio.Value ~= "" then
                        Remotes.RPNameText:FireServer("RolePlayBio", Bag.RPBio.Value)
                        task.wait(0.3)
                    end
                    if Bag:FindFirstChild("RPNameColor") then
                        Remotes.RPNameColor:FireServer("PickingRPNameColor", Bag.RPNameColor.Value)
                        task.wait(0.3)
                    end
                    if Bag:FindFirstChild("RPBioColor") then
                        Remotes.RPNameColor:FireServer("PickingRPBioColor", Bag.RPBioColor.Value)
                        task.wait(0.3)
                    end
                end
            end
        end
    end
})

local Tab9 = Window:MakeTab({"Misc", "rbxassetid://10723344088"})

local Section = Tab9:AddSection({"Aba Misc"})

local ReplicatedStorage = game:GetService("ReplicatedStorage")

if not _G.audio_all_delay then
  _G.audio_all_delay = 1
end

local function Audio_All_ClientSide(ID)

  local function CheckFolderAudioAll()
    local FolderAudio = workspace:FindFirstChild("Audio all client")
    if FolderAudio then
      return FolderAudio
    else
      local FolderAudio = Instance.new("Folder")
      FolderAudio.Name = "Audio all client"
      FolderAudio.Parent = workspace
      return FolderAudio
    end
  end

  local function CreateSound(ID)

    if type(ID) ~= "number" then
      print("Ensira o número")
      return nil
    end

    local Folder_Audio = CheckFolderAudioAll()
    if Folder_Audio then
      local Sound = Instance.new("Sound")
      Sound.SoundId = "rbxassetid://" .. ID
      Sound.Volume = 1
      Sound.Looped = false
      Sound.Parent = Folder_Audio
      Sound:Play()
      task.wait(3)
      Sound:Destroy()
    end
  end

  CreateSound(ID)

end

local function Audio_All_ServerSide(ID)

  if type(ID) ~= "number" then
    print("Ensira um numero")
    return nil
  end

  local GunSoundEvent = ReplicatedStorage:FindFirstChild("1Gu1nSound1s", true)
  if GunSoundEvent then
    GunSoundEvent:FireServer(workspace, ID, 1)
  end
end

local audio_all_dropdown_value = nil

Tab9:AddSection({"Audio all"})

local soundList = {
    {Name = "Grito Alto", ID = 5710016194},       
    {Name = "Jumpscare Horroroso", ID = 85435253347146}, 
    {Name = "Áudio Alto", ID = 6855150757},        
    {Name = "Ruído", ID = 120034877160791},        
    {Name = "Jumpscare 2", ID = 110637995610528},  
    {Name = "Risada Da Bruxa Minecraft", ID = 116214940486087}, 
    {Name = "The Boiled One", ID = 137177653817621},  
    {Name = "Deitei Um Ave Maria Doido", ID = 128669424001766},
    {Name = "Mandrake Detected", ID = 9068077052}, 
    {Name = "Aaaaaaaaa", ID = 80156405968805}, 
    {Name = "AAAHHHH", ID = 9084006093}, 
    {Name = "amongus", ID = 6651571134}, 
    {Name = "Sus", ID = 6701126635},     
    {Name = "Gritao AAAAAAAAA", ID = 5853668794},     
    {Name = "UHHHHH COFFCOFF", ID = 7056720271}, 
    {Name = "SUS", ID = 7153419575},     
}

local options = {}

for _, sound in ipairs(soundList) do
    table.insert(options, sound.Name)
end

Tab9:AddDropdown({
    Name = "Lista de Sons",
    Options = options,
    Default = {},
    MultSelect = false,
    Callback = function(selectedName)
        for _, sound in ipairs(soundList) do
            if sound.Name == selectedName then
                audio_all_dropdown_value = sound.ID
                break
            end
        end
    end
})

Tab9:AddButton({
  Name = "Tocar audio",
  Callback = function()
    Audio_All_ServerSide(audio_all_dropdown_value)
    task.spawn(function()
      Audio_All_ClientSide(audio_all_dropdown_value)
    end)
  end
})

Tab9:AddToggle({
  Name = "Tocar loop",
  Default = false,
  Callback = function(value)

    getgenv().Audio_All_loop = value

    while getgenv().Audio_All_loop do
      Audio_All_ServerSide(audio_all_dropdown_value)
      task.spawn(function()
        Audio_All_ClientSide(audio_all_dropdown_value)
      end)
      task.wait(_G.audio_all_delay)
    end
  end
})

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local audioID = 5229833733 

local function Audio_All_ClientSide(ID)
    local function CheckFolderAudioAll()
        local FolderAudio = workspace:FindFirstChild("Audio all client")
        if not FolderAudio then
            FolderAudio = Instance.new("Folder")
            FolderAudio.Name = "Audio all client"
            FolderAudio.Parent = workspace
        end
        return FolderAudio
    end

    local function CreateSound(ID)
        if type(ID) ~= "number" then
            print("Insira um número válido!")
            return nil
        end

        local Folder_Audio = CheckFolderAudioAll()
        if Folder_Audio then
            local Sound = Instance.new("Sound")
            Sound.SoundId = "rbxassetid://" .. ID
            Sound.Volume = 1
            Sound.Looped = false
            Sound.Parent = Folder_Audio
            Sound:Play()
            task.wait(1)
            Sound:Destroy()
        end
    end

    CreateSound(ID)
end

local function Audio_All_ServerSide(ID)
    if type(ID) ~= "number" then
        print("Insira um número válido!")
        return nil
    end

    local GunSoundEvent = ReplicatedStorage:FindFirstChild("1Gu1nSound1s", true)
    if GunSoundEvent then
        GunSoundEvent:FireServer(workspace, ID, 1)
    end
end

Tab9:AddToggle({
    Name = "Áudio Spam Fast Glitcher - ⚠️",
    Default = false,
    Callback = function(value)
        getgenv().Audio_All_loop_fast = value

        while getgenv().Audio_All_loop_fast do
            Audio_All_ServerSide(audioID)
            task.spawn(function()
                Audio_All_ClientSide(audioID)
            end)
            task.wait(0.00003)
        end
    end
})

local audio_all_textbox_value = nil

local function CheckNumberInString(str)
  return str:match("^%d+$") ~= nil
end

Tab9:AddTextBox({
  Name = "Adicionar id",
  Default = "",
  PlaceholderText = "Digite um id válido",
  ClearText = true,
  Callback = function(value)
    audio_all_textbox_value = value
  end
})

Tab9:AddButton({
  Name = "Tocar audio",
  Callback = function()
    
    local string_number = audio_all_textbox_value
    if CheckNumberInString(string_number) then
      Audio_All_ServerSide(tonumber(string_number))
      task.spawn(function()
        Audio_All_ClientSide(tonumber(string_number))
      end)
    else
      print("A string não só tem número")
    end
  end
})

Tab9:AddToggle({
  Name = "Tocar loop",
  Default = false,
  Callback = function(value)

    getgenv().Audio_All_loop2 = value
    local string_number = audio_all_textbox_value
    
    while getgenv().Audio_All_loop2 do
      if CheckNumberInString(string_number) then
        Audio_All_ServerSide(tonumber(string_number))
        task.spawn(function()
          Audio_All_ClientSide(tonumber(string_number))
        end)
      else
        print("A string não só tem número")
      end
      task.wait(_G.audio_all_delay)
    end
  end
})

local soundList = {
    {Name = "Grito Alto", ID = 5710016194},       
    {Name = "Jumpscare Horroroso", ID = 85435253347146}, 
    {Name = "Áudio Alto", ID = 6855150757},        
    {Name = "Ruído", ID = 120034877160791},        
    {Name = "Jumpscare 2", ID = 110637995610528},
    {Name = "Risada Da Bruxa Minecraft", ID = 116214940486087},
    {Name = "The Boiled One", ID = 137177653817621},  
    {Name = "Deitei Um Ave Maria Doido", ID = 128669424001766},
    {Name = "Mandrake Detected", ID = 9068077052}, 
    {Name = "Aaaaaaaaa", ID = 80156405968805}, 
    {Name = "AAAHHHH", ID = 9084006093}, 
    {Name = "AH AH AH", ID = 119277017538197}, 
    {Name = "Sus", ID = 6701126635},     
    {Name = "Gritao AAAAAAAAA", ID = 5853668794},     
    {Name = "UHHHHH COFFCOFF", ID = 7056720271}, 
    {Name = "Gemido", ID = 93300439155773},     
}

local options = {}

for _, sound in ipairs(soundList) do
    table.insert(options, sound.Name)
end

Tab9:AddDropdown({
    Name = "Selecione um Áudio Para Copiar",
    Options = options,
    Default = {},
    MultSelect = false,
    Callback = function(selectedName)
        for _, sound in ipairs(soundList) do
            if sound.Name == selectedName then
                
                local selectedID = sound.ID
                setclipboard(tostring(selectedID)) 
                game:GetService("StarterGui"):SetCore("SendNotification", {
                    Title = "ID Copiado!",
                    Text = "ID do áudio: " .. selectedID,
                    Duration = 5
                })
                print("ID copiado: " .. selectedID)  
                break
            end
        end
    end
})

Tab9:AddButton({
    Name = "Boombox",
    Callback = function()
        local player = game.Players.LocalPlayer
        local playerGui = player:FindFirstChild("PlayerGui")
        if not playerGui then return end 

        local boombox
        local sg
        local savedID = nil  
        local listFrame = {}  

        local function createBoombox()
            boombox = Instance.new("Tool")
            boombox.Name = "Boombox"
            boombox.RequiresHandle = true
            boombox.Parent = player.Backpack

            local handle = Instance.new("Part")
            handle.Name = "Handle"
            handle.Size = Vector3.new(1, 1, 1)
            handle.CanCollide = false
            handle.Anchored = false
            handle.Transparency = 1
            handle.Parent = boombox

            local function createGui()

                if listFrame[player.UserId] then
                    return  
                end

                listFrame[player.UserId] = true

                sg = Instance.new("ScreenGui")
                sg.Name = "ChooseSongGui"
                sg.Parent = playerGui  

                local frame = Instance.new("Frame")
                frame.Style = "RobloxRound"
                frame.Size = UDim2.new(0.25, 0, 0.25, 0)
                frame.Position = UDim2.new((1-frame.Size.X.Scale)/2, 0, (1-frame.Size.Y.Scale)/2, 0)
                frame.Parent = sg
                frame.Draggable = true

                local text = Instance.new("TextLabel")
                text.BackgroundTransparency = 1
                text.TextStrokeTransparency = 0
                text.TextColor3 = Color3.new(1, 1, 1)
                text.Size = UDim2.new(1, 0, 0.6, 0)
                text.TextScaled = true
                text.Text = "Lay down the beat!\nPut in the ID number for a song you love that's been uploaded to ROBLOX.\nLeave it blank to stop playing music."
                text.Parent = frame

                local input = Instance.new("TextBox")
                input.BackgroundColor3 = Color3.new(0, 0, 0)
                input.BackgroundTransparency = 0.5
                input.BorderColor3 = Color3.new(1, 1, 1)
                input.TextColor3 = Color3.new(1, 1, 1)
                input.TextStrokeTransparency = 1
                input.TextScaled = true
                input.Text = savedID or "142376088"  
                input.Size = UDim2.new(1, 0, 0.2, 0)
                input.Position = UDim2.new(0, 0, 0.6, 0)
                input.Parent = frame

                local button = Instance.new("TextButton")
                button.Style = "RobloxButton"
                button.Size = UDim2.new(0.75, 0, 0.2, 0)
                button.Position = UDim2.new(0.125, 0, 0.8, 0)
                button.TextColor3 = Color3.new(1, 1, 1)
                button.TextStrokeTransparency = 0
                button.Text = "Play!"
                button.TextScaled = true
                button.Parent = frame

                local function playAudioAll(ID)
                    if type(ID) ~= "number" then
                        print("Insira um número válido!")
                        return
                    end

                    local ReplicatedStorage = game:GetService("ReplicatedStorage")
                    local GunSoundEvent = ReplicatedStorage:FindFirstChild("1Gu1nSound1s", true)
                    if GunSoundEvent then
                        GunSoundEvent:FireServer(workspace, ID, 1)
                    end
                end

                local function playAudioLocal(ID)
                    local sound = Instance.new("Sound")
                    sound.SoundId = "rbxassetid://" .. ID
                    sound.Volume = 1
                    sound.Looped = false
                    sound.Parent = player.Character or workspace
                    sound:Play()
                    task.wait(3)
                    sound:Destroy()
                end

                button.MouseButton1Click:Connect(function()
                    local soundID = tonumber(input.Text)
                    if soundID then
                        savedID = soundID  
                        playAudioAll(soundID) 
                        playAudioLocal(soundID) 
                    else
                        print("ID inválido!")
                    end

                    if sg then
                        sg:Destroy()
                        listFrame[player.UserId] = nil  
                    end
                end)

            end

            boombox.Equipped:Connect(function()
                
                if not listFrame[player.UserId] then
                    createGui()
                end

                local args = {
                    [1] = 1018548665  
                }
                game:GetService("ReplicatedStorage").Remotes.Wear:InvokeServer(unpack(args))
            end)

            boombox.Unequipped:Connect(function()
                
                if sg then
                    sg:Destroy()
                    sg = nil
                end

                local args = {
                    [1] = 1018548665
                }
                game:GetService("ReplicatedStorage").Remotes.Wear:InvokeServer(unpack(args))

                listFrame[player.UserId] = nil
            end)

            boombox.AncestryChanged:Connect(function(_, parent)
                if not parent and sg then
                    sg:Destroy()
                    sg = nil
                    listFrame[player.UserId] = nil 
                end
            end)
        end

        createBoombox()
    end
})

local Section = Tab9:AddSection({"Jogador"})

Tab9:AddSlider({
   Name = "Speed",
   Increase = 1,
   MinValue = 16,
   MaxValue = 888,
   Default = 16,
   Callback = function(Value)
       local player = game.Players.LocalPlayer
       local character = player.Character or player.CharacterAdded:Wait()
       local humanoid = character:FindFirstChildOfClass("Humanoid")
       
       if humanoid then
           humanoid.WalkSpeed = Value
       end
   end
})

Tab9:AddSlider({
   Name = "Jumppower",
   Increase = 1,
   MinValue = 50,
   MaxValue = 500,
   Default = 50,
   Callback = function(Value)
       local player = game.Players.LocalPlayer
       local character = player.Character or player.CharacterAdded:Wait()
       local humanoid = character:FindFirstChildOfClass("Humanoid")
       
       if humanoid then
           humanoid.JumpPower = Value
       end
   end
})

Tab9:AddSlider({
   Name = "Gravidade",
   Increase = 1,
   MinValue = 0,
   MaxValue = 10000,
   Default = 196.2,
   Callback = function(Value)
       game.Workspace.Gravity = Value
   end
})

local InfiniteJumpEnabled = false

game:GetService("UserInputService").JumpRequest:Connect(function()
   if InfiniteJumpEnabled then
      local character = game.Players.LocalPlayer.Character
      if character and character:FindFirstChild("Humanoid") then
         character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
      end
   end
end)

Tab9:AddToggle({
   Name = "Infinite Jump",
   Default = false,
   Callback = function(Value)
      InfiniteJumpEnabled = Value
   end
})

local Clipon = false

Tab9:AddToggle({
    Name = "Noclip",
    Default = false,
    Callback = function(Value)
        if Value then
            Clipon = true

            local Stepped
            Stepped = game:GetService("RunService").Stepped:Connect(function()
                if Clipon then
                    for a, b in pairs(workspace:GetChildren()) do
                        if b.Name == game.Players.LocalPlayer.Name then
                            for i, v in pairs(workspace[game.Players.LocalPlayer.Name]:GetChildren()) do
                                if v:IsA("BasePart") then
                                    v.CanCollide = false
                                end
                            end
                        end
                    end
                else
                    Stepped:Disconnect()
                end
            end)
        else
            Clipon = false
        end
    end
})

local isActive = false

Tab9:AddToggle({
    Name = "Loop Smoke Avatar",
    Default = false,
    Callback = function(Value)
        isActive = Value

        while isActive do
            local mall = workspace:WaitForChild("WorkspaceCom"):WaitForChild("001_Mall"):WaitForChild("001_Pizza"):FindFirstChild("CatchFire")
            
            if mall then
                local touchInterest = mall:FindFirstChild("TouchInterest")
                if touchInterest then
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 0)
                    wait()
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 1)
                end
            end
            wait(1)
        end
    end
})

Tab9:AddToggle({
    Name = "Loop Fire Avatar",
    Default = false,
    Callback = function(Value)
        isActive = Value

        while isActive do
            local playerName = game.Players.LocalPlayer.Name
            local lotFolder = game:GetService("Workspace"):WaitForChild("001_Lots")
            local house = lotFolder:FindFirstChild(playerName .. "House")

            if house then
                local mall = house:WaitForChild("HousePickedByPlayer"):WaitForChild("HouseModel"):WaitForChild("001_BBQ"):FindFirstChild("CatchFire")
                if mall then
                    local touchInterest = mall:FindFirstChild("TouchInterest")
                    if touchInterest then
                        firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 0)
                        wait()
                        firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 1)
                    end
                end
            else
                warn("House not found for player: " .. playerName)
            end
            wait(1)
        end
    end
})

Tab9:AddButton({
    Name = "Get Trail",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local OldPos = RootPart.CFrame
        
        local function freezeHumanoid(humanoid)
            humanoid.WalkSpeed = 0
            humanoid.JumpPower = 0
        end
        
        local function restoreHumanoid(humanoid)
            humanoid.WalkSpeed = 16
            humanoid.JumpPower = 50
        end
        
        local firstPosition = CFrame.new(-349, 5, 98)
        
        local PoolClick = workspace.WorkspaceCom["001_Hospital"]:FindFirstChild("PoolClick")
        
        if PoolClick and PoolClick:FindFirstChild("ClickDetector") then
            freezeHumanoid(Humanoid)
            RootPart.CFrame = firstPosition
            task.wait(1)
            RootPart.CFrame = PoolClick.CFrame
            fireclickdetector(PoolClick.ClickDetector)
            task.wait(2)
            RootPart.CFrame = OldPos
            restoreHumanoid(Humanoid)
        else
            warn("PoolClick ou ClickDetector não encontrado!")
        end
    end
})

local Section = Tab9:AddSection({"Lag Server"})

local BNumber = 1000
local BasketToggleH = false
local OldPos

Tab9:AddToggle({
    Name = "Spam Basketball",
    Default = false,
    Callback = function(Value)
        BasketToggleH = Value
        local Player = game.Players.LocalPlayer
        local Backpack = Player.Backpack
        local Mouse = Player:GetMouse()
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Clone = workspace.WorkspaceCom["001_GiveTools"].Basketball

        if BasketToggleH then
            
            OldPos = RootPart.CFrame

            for i = 1, BNumber do
                task.wait()
                RootPart.CFrame = Clone.CFrame
                fireclickdetector(Clone.ClickDetector)
            end

            task.wait()
            RootPart.CFrame = OldPos

            task.spawn(function()
                while BasketToggleH do
                    task.wait()
                    for i, v in ipairs(Character:GetChildren()) do
                        if v.Name == "Basketball" then
                            task.wait()
                            local args = {
                                [1] = Mouse.Hit.p
                            }
                            v.ClickEvent:FireServer(unpack(args))
                        end
                    end
                end

                if OldPos then
                    RootPart.CFrame = OldPos
                end
            end)
        else

            if OldPos then
                RootPart.CFrame = OldPos
            end
        end
    end
})

Tab9:AddSlider({
    Name = "Quantidade De Basketball",
    MinValue = 1,
    MaxValue = 1000,
    Default = BNumber,
    Increase = 1,
    Callback = function(Value)
        BNumber = Value
    end
})

local Tab11 = Window:MakeTab({"Scripts", "rbxassetid://10709806277"})

local Section = Tab11:AddSection({"Tab Scripts"})

Tab11:AddButton({
  Name = "Infinite Yield",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
  end
})